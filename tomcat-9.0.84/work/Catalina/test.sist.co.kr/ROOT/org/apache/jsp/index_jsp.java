/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-01-11 07:42:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/include/navigation.jsp", Long.valueOf(1704950021892L));
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1704950023907L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- header start -->\r\n");
      out.write('\r');
      out.write('\n');

	response.setHeader("Cache-Control","no-store");  //매번서버에 요청
	response.setHeader("Pragma","no-cache"); 
	response.setDateHeader("Expires",(long)0);
	
	if (request.getProtocol().equals("HTTP/1.1")) 
	{
		response.setHeader("Cache-Control", "no-cache");
	}

      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"/resources/images/favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/bootstrap.min.css\" type=\"text/css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/icia.common.js\"></script>");
      out.write("\r\n");
      out.write("<!-- header end -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("  /* padding-top: 40px; */\r\n");
      out.write("  padding-bottom: 40px;\r\n");
      out.write("  /* background-color: #eee; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin {\r\n");
      out.write("  max-width: 330px;\r\n");
      out.write("  padding: 15px;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write(".form-signin .form-signin-heading,\r\n");
      out.write(".form-signin .checkbox {\r\n");
      out.write("  margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write(".form-signin .checkbox {\r\n");
      out.write("  font-weight: 400;\r\n");
      out.write("}\r\n");
      out.write(".form-signin .form-control {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  -webkit-box-sizing: border-box;\r\n");
      out.write("  -moz-box-sizing: border-box;\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  height: auto;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write(".form-signin .form-control:focus {\r\n");
      out.write("  z-index: 2;\r\n");
      out.write("}\r\n");
      out.write(".form-signin input[type=\"text\"] {\r\n");
      out.write("  margin-bottom: 5px;\r\n");
      out.write("  border-bottom-right-radius: 0;\r\n");
      out.write("  border-bottom-left-radius: 0;\r\n");
      out.write("}\r\n");
      out.write(".form-signin input[type=\"password\"] {\r\n");
      out.write("  margin-bottom: 10px;\r\n");
      out.write("  border-top-left-radius: 0;\r\n");
      out.write("  border-top-right-radius: 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	$(\"#userId\").focus();\r\n");
      out.write("	\r\n");
      out.write("	$(\"#btnLogin\").on(\"click\", function(){\r\n");
      out.write("		fn_loginCheck();\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function fn_loginCheck()\r\n");
      out.write("{\r\n");
      out.write("	if($.trim($(\"#userId\").val()).length <= 0)\r\n");
      out.write("	{\r\n");
      out.write("		alert(\"아이디를 입력하세요.\");\r\n");
      out.write("		$(\"#userId\").val(\"\");\r\n");
      out.write("		$(\"#userId\").focus();\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if($.trim($(\"#userPwd\").val()).length <= 0)\r\n");
      out.write("	{\r\n");
      out.write("		alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("		$(\"#userPwd\").val(\"\");\r\n");
      out.write("		$(\"#userPwd\").focus();\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	document.loginForm.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- navigation start -->\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark mb-3\"> \r\n");
      out.write("	<ul class=\"navbar-nav\"> \r\n");
      out.write("	    <li class=\"nav-item\"> \r\n");
      out.write("	      <a class=\"nav-link\" href=\"/\"> 로그인</a> \r\n");
      out.write("	    </li> \r\n");
      out.write("	    <li class=\"nav-item\"> \r\n");
      out.write("	      <a class=\"nav-link\" href=\"/user/userRegForm.jsp\">회원가입</a> \r\n");
      out.write("	    </li> \r\n");
      out.write("  </ul> \r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("<!-- navigation end -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("	<form name=\"loginForm\" id=\"loginForm\" method=\"post\" action=\"/loginProc.jsp\" class=\"form-signin\">\r\n");
      out.write("	    <h2 class=\"form-signin-heading m-b3\">로그인</h2>\r\n");
      out.write("		<label for=\"userId\" class=\"sr-only\">아이디</label>\r\n");
      out.write("		<input type=\"text\" id=\"userId\" name=\"userId\" class=\"form-control\" maxlength=\"20\" placeholder=\"아이디\">\r\n");
      out.write("		<label for=\"userPwd\" class=\"sr-only\">비밀번호</label>\r\n");
      out.write("		<input type=\"password\" id=\"userPwd\" name=\"userPwd\" class=\"form-control\" maxlength=\"20\" placeholder=\"비밀번호\">\r\n");
      out.write("		  \r\n");
      out.write("		<button type=\"button\" id=\"btnLogin\" class=\"btn btn-lg btn-primary btn-block\">로그인</button>\r\n");
      out.write("    	<button type=\"button\" id=\"btnReg\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">회원가입</button>\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
